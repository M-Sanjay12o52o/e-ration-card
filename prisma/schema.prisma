generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  number   String    @unique
  name     String?
  password String?

  role     UserRole @default(USER)
  
  Session  Session[]
  Account  Account[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserRole {
  ADMIN
  USER
  SUBADMIN
}

model Hub {
  id                String   @id @default(uuid())
  name              String   @unique
  address           String   @unique
  vehicleNumber     String   @unique
  superVisorName    String
  superVisorContact String   @unique
  ration            Ration[] @relation("HubToRation")
}

model CardHolder {
  id            String         @id @default(uuid())
  firstName     String         @unique
  lastName      String         @unique
  number        String         @unique
  email         String         @unique
  age           Int
  gender        String
  address       String         @unique
  familyCount   Int
  familyMembers FamilyMember[]
}

model Admin {
  id       String  @id @default(uuid())
  email    String  @unique
  number   String  @unique
  name     String?
  password String?
  role     String  @default("ADMIN")
}

model FamilyMember {
  id           String      @id @default(uuid())
  fullName     String      @unique
  age          Int
  number       String
  relation     String
  cardHolderId String?
  CardHolder   CardHolder? @relation(fields: [cardHolderId], references: [id])
}

model Ration {
  id         String   @id @default(uuid())
  name       String   @unique
  quantity   Int
  expiryDate DateTime
  hubIds     String?
  hubs       Hub[]    @relation("HubToRation")
}
